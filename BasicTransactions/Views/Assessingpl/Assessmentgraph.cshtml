@model MROCoatching.DataObjects.Models.General.Dashboard
@using Microsoft.AspNetCore.Http
@inject MROCoatching.Utilities.Utility.Menu menuBuilder
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
<!DOCTYPE html>
@{
    ViewData["Title"] = "Graphs";
    Layout = "~/Views/Shared/_layout3.cshtml";
}
<style>
    .modal {
        padding-left: 10%;
    }

    .modal-lg {
        max-width: 80%;
    }

    .modal-sm {
        max-width: 40%;
        z-index: 10;
    }

    .modalsmall-lg {
        max-width: 80%;
        width: 80px;
    }

    .modal-backdrop {
        z-index: auto;
    }
</style>
<section class="content">
    <div class="card">
        <div class="card-body col-sm-12 row">
            <div class="col-sm-6">
                <canvas id="wholeChart" style="width:50%;max-width:600px;">
                </canvas>
            </div>
            <div class="col-sm-6">
                <canvas id="wholeChart1" style="width:50%;max-width:300px;">
                </canvas>
            </div>
            <div class="progress progress-md">
                <div class="progress-bar bg-green" role="progressbar" style="width: 45%" aria-valuenow="45" aria-valuemin="0" aria-valuemax="45">

                </div>
            </div>
        </div>
    </div>
</section>
<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.5.0/Chart.min.js"></script>
<script type="text/javascript">
    $(function ()
    {
        /* ---------------------------------------------------------------------*/
        var xValues = ["Task Completed", "Trainee Signed", "Not Started"];
         @{
             var yValues = "";
             int i = 0;
             foreach (var item in Model.Wholedatas)
             {
                 if (i == 0)
                 {
                     yValues = "[" + item.value;
                 }

                 else
                 {
                     yValues = yValues + ", " + item.value;
                 }
                 i++;
             }
             yValues = yValues + ", "+0+"]";

              }
        new Chart("wholeChart", {
              type: "bar",
            data: {
                  labels: xValues,
                datasets: [{
                    backgroundColor: ["green", "orange", "pink"],
                    data: @yValues,
                }]
            },
            options: {
                  legend: { display: false },
                title: {
                      display: true,
                    text: "Coaching Status on Bar Chart"
                }
            }
        });
        var xValues1 = ["Task Completed","Trainee Signed", "Not Started"];
        new Chart("wholeChart1", {
            type: "pie",
            data: {
                labels: xValues1,
                datasets: [{
                    backgroundColor: ["green", "orange", "pink", "black"],
                    data: @yValues,
                }]
            },
            options: {
                legend: { display: false },
                title: {
                    display: true,
                    text: "Coaching Status on Pie chart",
                }
            }
        });
        /* ---------------------------------------------------------------------*/
    });
</script>